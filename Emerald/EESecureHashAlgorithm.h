#pragma once
#ifndef _EE_SECUREHASHALGORITHM_H_
#define _EE_SECUREHASHALGORITHM_H_

#include <string>


//----------------------------------------------------------------------------------------------------
namespace Emerald
{
	// EESecureHashAlgorithm
	//----------------------------------------------------------------------------------------------------
	/*
	------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	Algorithm and variant	|	Output size(bits)	|	Internal state size(bits)	|	Block size(bits)	|	Max message size(bits)	|	Rounds	|	Operations								|	Security(bits)				|	Example performance[2](MiB/s)
	------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	SHA-0						160						160 (5 ¡Á 32)					512						2^64 ? 1					80			And, Xor, Rot, Add (mod 232), Or			<80 (collisions found)			-
	------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	SHA-1						160						160 (5 ¡Á 32)					512						2^64 ? 1					80			And, Xor, Rot, Add (mod 232), Or			<80 (theoretical attack)		192
	------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	SHA-2 | SHA-224				224						256 (8 ¡Á 32)					512						2^64 ? 1					64			And, Xor, Rot, Add (mod 232), Or, Shr		112								139
	        SHA-256				256																																									128
			SHA-384				384						512 (8 ¡Á 64)					1024					2^128 ? 1					80			And, Xor, Rot, Add (mod 232), Or, Shr		192								154
			SHA-512				512																																									256
			SHA-512/224			224																																									112
			SHA-512/256			256																																									128
	------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	SHA-3 | SHA3-224			224						1600 (5 ¡Á 5 ¡Á 64)				1152					Unlimited					24			And, Xor, Rot, Not							112								-
	        SHA3-256			256														1088																										128
            SHA3-384			384														832																											192
            SHA3-512			512														576																											256
			SHAKE128			d (arbitrary)											1344																										min(d/2, 128)					-
			SHAKE256			d (arbitrary)											1088																										min(d/2, 256)
	------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	*/
	class EESecureHashAlgorithm
	{
	public:
		static std::string SHA_1(const std::string& _input);
	};
}

#endif